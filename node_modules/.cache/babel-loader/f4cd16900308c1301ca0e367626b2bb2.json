{"ast":null,"code":"var _jsxFileName = \"/Users/denise/Developer/essay-dashboard-b/essay-dashboard-b/src/pages/LoginBtns.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleLoggedIn = () => this.setState(state => {\n      return {\n        isLoggedIn: !state.isLoggedIn\n      };\n    });\n\n    this.onSignIn = googleUser => {\n      this.toggleLoggedIn();\n      let user = googleUser.getBasicProfile();\n      let id_token = googleUser.getAuthResponse().id_token;\n      console.log('google user obj', user);\n      console.log('google_id_token', id_token); // plus any other logic here\n    };\n\n    this.renderGoogleLoginButton = () => {\n      console.log('rendering google signin button');\n      window.gapi.signin2.render('my-signin2', {\n        scope: 'profile email',\n        width: 250,\n        height: 40,\n        longtitle: true,\n        theme: 'light',\n        onsuccess: this.onSignIn\n      });\n    };\n\n    this.logout = () => {\n      console.log('in logout');\n      let auth2 = window.gapi && window.gapi.auth2.getAuthInstance();\n\n      if (auth2) {\n        auth2.signOut().then(() => {\n          this.toggleLoggedIn();\n          console.log('Logged out successfully');\n        }).catch(err => {\n          console.log('Error while logging out', err);\n        });\n      } else {\n        console.log('error while logging out');\n      }\n    };\n\n    this.state = {\n      isLoggedIn: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('google-loaded', this.renderGoogleLoginButton);\n    window.gapi && this.renderGoogleLoginButton();\n  }\n\n  render() {\n    // noinspection CheckTagEmptyBody\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"my-signin2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), this.state.isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          width: 200,\n          height: 40,\n          textAlign: 'center'\n        },\n        onClick: this.logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoginButton;","map":{"version":3,"sources":["/Users/denise/Developer/essay-dashboard-b/essay-dashboard-b/src/pages/LoginBtns.js"],"names":["React","LoginButton","Component","constructor","props","toggleLoggedIn","setState","state","isLoggedIn","onSignIn","googleUser","user","getBasicProfile","id_token","getAuthResponse","console","log","renderGoogleLoginButton","window","gapi","signin2","render","scope","width","height","longtitle","theme","onsuccess","logout","auth2","getAuthInstance","signOut","then","catch","err","componentDidMount","addEventListener","textAlign"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACxCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,cAPmB,GAOF,MACf,KAAKC,QAAL,CAAcC,KAAK,IAAI;AACrB,aAAO;AAAEC,QAAAA,UAAU,EAAE,CAACD,KAAK,CAACC;AAArB,OAAP;AACD,KAFD,CARiB;;AAAA,SAYnBC,QAZmB,GAYRC,UAAU,IAAI;AACvB,WAAKL,cAAL;AAEA,UAAIM,IAAI,GAAGD,UAAU,CAACE,eAAX,EAAX;AACA,UAAIC,QAAQ,GAAGH,UAAU,CAACI,eAAX,GAA6BD,QAA5C;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,IAA/B;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BH,QAA/B,EAPuB,CAQvB;AACD,KArBkB;;AAAA,SAuBnBI,uBAvBmB,GAuBO,MAAM;AAC9BF,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACAE,MAAAA,MAAM,CAACC,IAAP,CAAYC,OAAZ,CAAoBC,MAApB,CAA2B,YAA3B,EAAyC;AACvCC,QAAAA,KAAK,EAAE,eADgC;AAEvCC,QAAAA,KAAK,EAAE,GAFgC;AAGvCC,QAAAA,MAAM,EAAE,EAH+B;AAIvCC,QAAAA,SAAS,EAAE,IAJ4B;AAKvCC,QAAAA,KAAK,EAAE,OALgC;AAMvCC,QAAAA,SAAS,EAAE,KAAKlB;AANuB,OAAzC;AAQD,KAjCkB;;AAAA,SAmCnBmB,MAnCmB,GAmCV,MAAM;AACbb,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEA,UAAIa,KAAK,GAAGX,MAAM,CAACC,IAAP,IAAeD,MAAM,CAACC,IAAP,CAAYU,KAAZ,CAAkBC,eAAlB,EAA3B;;AACA,UAAID,KAAJ,EAAW;AACTA,QAAAA,KAAK,CACFE,OADH,GAEGC,IAFH,CAEQ,MAAM;AACV,eAAK3B,cAAL;AACAU,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD,SALH,EAMGiB,KANH,CAMSC,GAAG,IAAI;AACZnB,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCkB,GAAvC;AACD,SARH;AASD,OAVD,MAUO;AACLnB,QAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AACD;AACF,KApDkB;;AAEjB,SAAKT,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGD;;AAiDD2B,EAAAA,iBAAiB,GAAG;AAClBjB,IAAAA,MAAM,CAACkB,gBAAP,CAAwB,eAAxB,EAAyC,KAAKnB,uBAA9C;AACAC,IAAAA,MAAM,CAACC,IAAP,IAAe,KAAKF,uBAAL,EAAf;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP;AACA,wBACE;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA,cAFF,EAGG,KAAKd,KAAL,CAAWC,UAAX,iBACC;AAAQ,QAAA,KAAK,EAAE;AAAEe,UAAAA,KAAK,EAAE,GAAT;AAAcC,UAAAA,MAAM,EAAE,EAAtB;AAA0Ba,UAAAA,SAAS,EAAE;AAArC,SAAf;AAAgE,QAAA,OAAO,EAAE,KAAKT,MAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAzEuC;;AA4E1C,eAAe3B,WAAf","sourcesContent":["import React from 'react';\n\nclass LoginButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoggedIn: false\n    };\n  }\n\n  toggleLoggedIn = () =>\n    this.setState(state => {\n      return { isLoggedIn: !state.isLoggedIn };\n    });\n\n  onSignIn = googleUser => {\n    this.toggleLoggedIn();\n\n    let user = googleUser.getBasicProfile();\n    let id_token = googleUser.getAuthResponse().id_token;\n\n    console.log('google user obj', user);\n    console.log('google_id_token', id_token);\n    // plus any other logic here\n  };\n\n  renderGoogleLoginButton = () => {\n    console.log('rendering google signin button');\n    window.gapi.signin2.render('my-signin2', {\n      scope: 'profile email',\n      width: 250,\n      height: 40,\n      longtitle: true,\n      theme: 'light',\n      onsuccess: this.onSignIn\n    });\n  };\n\n  logout = () => {\n    console.log('in logout');\n\n    let auth2 = window.gapi && window.gapi.auth2.getAuthInstance();\n    if (auth2) {\n      auth2\n        .signOut()\n        .then(() => {\n          this.toggleLoggedIn();\n          console.log('Logged out successfully');\n        })\n        .catch(err => {\n          console.log('Error while logging out', err);\n        });\n    } else {\n      console.log('error while logging out');\n    }\n  };\n\n  componentDidMount() {\n    window.addEventListener('google-loaded', this.renderGoogleLoginButton);\n    window.gapi && this.renderGoogleLoginButton();\n  }\n\n  render() {\n    // noinspection CheckTagEmptyBody\n    return (\n      <div>\n        <div id=\"my-signin2\"></div>\n        <br />\n        {this.state.isLoggedIn && (\n          <button style={{ width: 200, height: 40, textAlign: 'center' }} onClick={this.logout}>\n            Logout\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default LoginButton;"]},"metadata":{},"sourceType":"module"}